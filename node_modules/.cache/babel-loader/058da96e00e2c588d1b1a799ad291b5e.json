{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport SearchBar from \"./components/search_bar\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.searchPlanetByName = function (event) {\n      fetch('https://swapi.co/api/planets/?search=' + event.target.value).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        //let searchResult = JSON.parse(responseBody).results;\n        console.log(response);\n\n        _this.setState({\n          searchResult: response.results\n        });\n      });\n    };\n\n    _this.state = {\n      selectedVideo: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearchTermChange: this.videoSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\redac\\Documents\\GitHub\\react-star-wars\\src\\index.js"],"names":["React","Component","ReactDOM","SearchBar","App","searchPlanetByName","event","fetch","target","value","then","response","json","console","log","setState","searchResult","results","state","selectedVideo","videoSearch","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAEMC,G;;;;;AACJ,iBAAe;AAAA;;AAAA;;AACb;;AADa,UAQfC,kBARe,GAQM,UAACC,KAAD,EAAW;AAC9BC,MAAAA,KAAK,CAAC,0CAAyCD,KAAK,CAACE,MAAN,CAAaC,KAAvD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,cAAKI,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEL,QAAQ,CAACM;AAAzB,SAAd;AACD,OANH;AAQD,KAjBc;;AAGb,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAHa;AAMd;;;;6BAaS;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,kBAAkB,EAAE,KAAKC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EA1BenB,S;;AA6BlBC,QAAQ,CAACmB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport SearchBar from \"./components/search_bar\";\n\nclass App extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      selectedVideo: []\n    }\n  }\n\n  searchPlanetByName = (event) => {\n    fetch('https://swapi.co/api/planets/?search='+ event.target.value)\n      .then(response => response.json())\n      .then(response => {\n        //let searchResult = JSON.parse(responseBody).results;\n        console.log(response);\n        this.setState({ searchResult: response.results });\n      })\n\n  }\n\n  render () {\n    return (\n      <div>\n        <SearchBar onSearchTermChange={this.videoSearch} />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}