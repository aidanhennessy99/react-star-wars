{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\src\\\\components\\\\SearchBar.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from \"react\";\n\nvar axios = require('axios');\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSearchPlanetByName = function (term) {\n      _this.setState({\n        videos: [],\n        selectedVideo: null\n      });\n\n      console.log(term);\n      var url = 'https://swapi.co/api/planets';\n      var params = {\n        q: term\n      };\n      axios.get(url, {\n        params: params\n      }).then(function (response) {\n        _this.setState({\n          videos: response.data.items,\n          selectedVideo: response.data.items[0]\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"search for a planet\",\n        onChange: this.searchPlanetByName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(term) {\n      this.setState({\n        term: term\n      });\n      this.props.onSearchTermChange(term);\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["C:\\Users\\redac\\Documents\\GitHub\\react-star-wars\\src\\components\\SearchBar.js"],"names":["React","Component","axios","require","SearchBar","onSearchPlanetByName","term","setState","videos","selectedVideo","console","log","url","params","q","get","then","response","data","items","catch","error","searchPlanetByName","props","onSearchTermChange"],"mappings":";;;;;;AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;IAEMC,S;;;;;;;;;;;;;;;;;;UAEJC,oB,GAAuB,UAACC,IAAD,EAAU;AAC/B,YAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAG,EAAV;AAAcC,QAAAA,aAAa,EAAE;AAA7B,OAAd;;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,UAAMM,GAAG,GAAG,8BAAZ;AAEG,UAAMC,MAAM,GAAI;AAEXC,QAAAA,CAAC,EAAER;AAFQ,OAAhB;AAMHJ,MAAAA,KAAK,CAACa,GAAN,CAAUH,GAAV,EAAe;AAAEC,QAAAA,MAAM,EAAEA;AAAV,OAAf,EACKG,IADL,CACU,UAAAC,QAAQ,EAAI;AAChB,cAAKV,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAES,QAAQ,CAACC,IAAT,CAAcC,KADV;AAEZV,UAAAA,aAAa,EAAEQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB;AAFH,SAAd;AAID,OANL,EAOGC,KAPH,CAOS,UAAAC,KAAK,EAAI;AACdX,QAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACC,OATL;AAUH,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,WAAW,EAAC,qBADhB;AAEI,QAAA,QAAQ,EAAE,KAAKC,kBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;kCAEahB,I,EAAM;AAClB,WAAKC,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACA,WAAKiB,KAAL,CAAWC,kBAAX,CAA8BlB,IAA9B;AACD;;;;EAvCqBL,S;;AA0CxB,eAAeG,SAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { Component } from \"react\";\r\nconst axios = require('axios');\r\n\r\nclass SearchBar extends Component {\r\n\r\n  onSearchPlanetByName = (term) => { \r\n    this.setState({videos : [], selectedVideo: null })\r\n      console.log(term);\r\n      const url = 'https://swapi.co/api/planets';\r\n\r\n         const params =  {\r\n              \r\n              q: term,\r\n             \r\n          };\r\n\r\n      axios.get(url, { params: params })\r\n          .then(response => {\r\n            this.setState({\r\n              videos: response.data.items,\r\n              selectedVideo: response.data.items[0]\r\n            });\r\n          })\r\n        .catch(error => {\r\n          console.error(error);\r\n          });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar\">\r\n        <input type=\"text\"\r\n            placeholder=\"search for a planet\"\r\n            onChange={this.searchPlanetByName}>\r\n          </input>     \r\n      </div>     \r\n    );\r\n  }\r\n\r\n  onInputChange(term) {\r\n    this.setState({ term });\r\n    this.props.onSearchTermChange(term);\r\n  }\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}