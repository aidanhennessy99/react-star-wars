{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\redac\\\\Documents\\\\GitHub\\\\react-star-wars\\\\src\\\\components\\\\App.js\";\nimport { Switch, Route } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport Planets from './Planets';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.searchPlanetByName = function (event) {\n      fetch('https://swapi.co/api/planets/?search=' + event.target.value).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        //let searchResult = JSON.parse(responseBody).results;\n        console.log(response);\n\n        _this.setState({\n          planets: response.results\n        });\n      });\n    };\n\n    _this.state = {\n      planets: [{\n        name: '',\n        climate: '',\n        population: '',\n        terrain: '',\n        diameter: '',\n        surface_water: ''\n      }]\n    };\n    _this.addPlanet = _this.addPlanet.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addPlanet\",\n    value: function addPlanet(planet) {\n      this.setState({\n        planets: this.state.planets.concat([planet])\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"pageStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Planet\"), React.createElement(\"div\", {\n        className: \"searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"search for a planet\",\n        onChange: this.searchPlanetByName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), Object.keys(this.state.planets).map(function (item, i) {\n        return React.createElement(\"ol\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, _this2.state.planets[item].name)), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Add Planet to Travel List\"));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(Planets, {\n            addPlanet: _this2.addPlanet,\n            planets: _this2.state.planets,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/planet\",\n        render: function render() {\n          return React.createElement(Planets, {\n            addPlanet: _this2.addPlanet,\n            planets: _this2.state.planets,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\redac\\Documents\\GitHub\\react-star-wars\\src\\components\\App.js"],"names":["Switch","Route","React","Component","Planets","App","searchPlanetByName","event","fetch","target","value","then","response","json","console","log","setState","planets","results","state","name","climate","population","terrain","diameter","surface_water","addPlanet","bind","planet","concat","Object","keys","map","item","i"],"mappings":"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","sourcesContent":["import { Switch, Route } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\nimport Planets from './Planets'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            planets: [\r\n                {\r\n                name: '',\r\n                climate: '',\r\n                population: '',\r\n                terrain: '',\r\n                diameter: '',\r\n                surface_water: ''\r\n             }\r\n            ]\r\n        }\r\n        this.addPlanet = this.addPlanet.bind(this);\r\n    }\r\n\r\n    searchPlanetByName = (event) => {\r\n\r\n    fetch('https://swapi.co/api/planets/?search='+ event.target.value)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n        //let searchResult = JSON.parse(responseBody).results;\r\n        console.log(response);\r\n        this.setState({ planets: response.results });\r\n        })\r\n    }\r\n\r\n  addPlanet (planet) {\r\n    this.setState({planets: this.state.planets.concat([planet])});\r\n  }\r\n\r\nrender() {\r\n    return (\r\n      <div className=\"pageStyle\">\r\n       <h1>Planet</h1>\r\n        <div className=\"searchBar\">\r\n          <input type=\"text\"\r\n            placeholder=\"search for a planet\"\r\n            onChange={this.searchPlanetByName}>\r\n          </input>\r\n          {Object.keys(this.state.planets).map((item, i) => (\r\n            <ol key={i}>\r\n             <span><h1>{this.state.planets[item].name}</h1></span>\r\n     \r\n              <button>Add Planet to Travel List</button>\r\n            </ol>\r\n          ))}\r\n         \r\n        </div>\r\n        \r\n        <div>\r\n        <Switch>\r\n          <Route exact path='/' render={() => (\r\n            <Planets addPlanet={this.addPlanet} planets={this.state.planets} />\r\n          )}/>\r\n          <Route path='/planet' render={() => (\r\n            <Planets addPlanet={this.addPlanet} planets={this.state.planets} />\r\n          )}/>\r\n          \r\n    \r\n      \r\n        </Switch>\r\n       \r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}